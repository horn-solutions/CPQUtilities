//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace CPQUtilities.CpqApi {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CpqApiSoap", Namespace="http://webcominc.com/")]
    public partial class CpqApi : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback doUSeeMeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCartPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback setCartPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback setCartItemPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback setCartPropertiesForEveryQuoteInOpportunityOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddItemsDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback performCartActionOperationCompleted;
        
        private System.Threading.SendOrPostCallback getActionListOperationCompleted;
        
        private System.Threading.SendOrPostCallback PlaceOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateCatalogueCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback RequestForQuotationOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewQuoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewQuoteForFederationOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewQuoteForFederationRoutingOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewQuoteFromSFOperationCompleted;
        
        private System.Threading.SendOrPostCallback LinkOpportunityOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerAdministrationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQuoteFieldOperationCompleted;
        
        private System.Threading.SendOrPostCallback performQuoteActionOperationCompleted;
        
        private System.Threading.SendOrPostCallback performQuoteActionFromSFOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQuoteDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQuoteItemsAttributesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCatalogueOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpsertProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpsertProjectFromSFOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateNewQuoteAndGetQuoteDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchQuotesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchQuotesFromSFOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRevisionsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CpqApi() {
            this.Url = global::CPQUtilities.Properties.Settings.Default.CPQUtilities_com_webcomcpq_www_CpqApi;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event doUSeeMeCompletedEventHandler doUSeeMeCompleted;
        
        /// <remarks/>
        public event getCartPropertiesCompletedEventHandler getCartPropertiesCompleted;
        
        /// <remarks/>
        public event setCartPropertiesCompletedEventHandler setCartPropertiesCompleted;
        
        /// <remarks/>
        public event setCartItemPropertiesCompletedEventHandler setCartItemPropertiesCompleted;
        
        /// <remarks/>
        public event setCartPropertiesForEveryQuoteInOpportunityCompletedEventHandler setCartPropertiesForEveryQuoteInOpportunityCompleted;
        
        /// <remarks/>
        public event AddItemsDataCompletedEventHandler AddItemsDataCompleted;
        
        /// <remarks/>
        public event performCartActionCompletedEventHandler performCartActionCompleted;
        
        /// <remarks/>
        public event getActionListCompletedEventHandler getActionListCompleted;
        
        /// <remarks/>
        public event PlaceOrderCompletedEventHandler PlaceOrderCompleted;
        
        /// <remarks/>
        public event ValidateCatalogueCodesCompletedEventHandler ValidateCatalogueCodesCompleted;
        
        /// <remarks/>
        public event RequestForQuotationCompletedEventHandler RequestForQuotationCompleted;
        
        /// <remarks/>
        public event NewQuoteCompletedEventHandler NewQuoteCompleted;
        
        /// <remarks/>
        public event NewQuoteForFederationCompletedEventHandler NewQuoteForFederationCompleted;
        
        /// <remarks/>
        public event NewQuoteForFederationRoutingCompletedEventHandler NewQuoteForFederationRoutingCompleted;
        
        /// <remarks/>
        public event NewQuoteFromSFCompletedEventHandler NewQuoteFromSFCompleted;
        
        /// <remarks/>
        public event LinkOpportunityCompletedEventHandler LinkOpportunityCompleted;
        
        /// <remarks/>
        public event CustomerAdministrationCompletedEventHandler CustomerAdministrationCompleted;
        
        /// <remarks/>
        public event GetQuoteFieldCompletedEventHandler GetQuoteFieldCompleted;
        
        /// <remarks/>
        public event performQuoteActionCompletedEventHandler performQuoteActionCompleted;
        
        /// <remarks/>
        public event performQuoteActionFromSFCompletedEventHandler performQuoteActionFromSFCompleted;
        
        /// <remarks/>
        public event GetQuoteDataCompletedEventHandler GetQuoteDataCompleted;
        
        /// <remarks/>
        public event GetQuoteItemsAttributesCompletedEventHandler GetQuoteItemsAttributesCompleted;
        
        /// <remarks/>
        public event GetCatalogueCompletedEventHandler GetCatalogueCompleted;
        
        /// <remarks/>
        public event UpsertProjectCompletedEventHandler UpsertProjectCompleted;
        
        /// <remarks/>
        public event UpsertProjectFromSFCompletedEventHandler UpsertProjectFromSFCompleted;
        
        /// <remarks/>
        public event CreateNewQuoteAndGetQuoteDataCompletedEventHandler CreateNewQuoteAndGetQuoteDataCompleted;
        
        /// <remarks/>
        public event SearchQuotesCompletedEventHandler SearchQuotesCompleted;
        
        /// <remarks/>
        public event SearchQuotesFromSFCompletedEventHandler SearchQuotesFromSFCompleted;
        
        /// <remarks/>
        public event GetRevisionsCompletedEventHandler GetRevisionsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webcominc.com/doUSeeMe", RequestNamespace="http://webcominc.com/", ResponseNamespace="http://webcominc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string doUSeeMe(string username, string password) {
            object[] results = this.Invoke("doUSeeMe", new object[] {
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void doUSeeMeAsync(string username, string password) {
            this.doUSeeMeAsync(username, password, null);
        }
        
        /// <remarks/>
        public void doUSeeMeAsync(string username, string password, object userState) {
            if ((this.doUSeeMeOperationCompleted == null)) {
                this.doUSeeMeOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoUSeeMeOperationCompleted);
            }
            this.InvokeAsync("doUSeeMe", new object[] {
                        username,
                        password}, this.doUSeeMeOperationCompleted, userState);
        }
        
        private void OndoUSeeMeOperationCompleted(object arg) {
            if ((this.doUSeeMeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doUSeeMeCompleted(this, new doUSeeMeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webcominc.com/getCartProperties", RequestNamespace="http://webcominc.com/", ResponseNamespace="http://webcominc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode getCartProperties(string username, string password, string compositeCartId, string[] propertyStrongNames) {
            object[] results = this.Invoke("getCartProperties", new object[] {
                        username,
                        password,
                        compositeCartId,
                        propertyStrongNames});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void getCartPropertiesAsync(string username, string password, string compositeCartId, string[] propertyStrongNames) {
            this.getCartPropertiesAsync(username, password, compositeCartId, propertyStrongNames, null);
        }
        
        /// <remarks/>
        public void getCartPropertiesAsync(string username, string password, string compositeCartId, string[] propertyStrongNames, object userState) {
            if ((this.getCartPropertiesOperationCompleted == null)) {
                this.getCartPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCartPropertiesOperationCompleted);
            }
            this.InvokeAsync("getCartProperties", new object[] {
                        username,
                        password,
                        compositeCartId,
                        propertyStrongNames}, this.getCartPropertiesOperationCompleted, userState);
        }
        
        private void OngetCartPropertiesOperationCompleted(object arg) {
            if ((this.getCartPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCartPropertiesCompleted(this, new getCartPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webcominc.com/setCartProperties", RequestNamespace="http://webcominc.com/", ResponseNamespace="http://webcominc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode setCartProperties(string username, string password, string compositeCartId, string erpId, System.Xml.XmlNode xDoc) {
            object[] results = this.Invoke("setCartProperties", new object[] {
                        username,
                        password,
                        compositeCartId,
                        erpId,
                        xDoc});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void setCartPropertiesAsync(string username, string password, string compositeCartId, string erpId, System.Xml.XmlNode xDoc) {
            this.setCartPropertiesAsync(username, password, compositeCartId, erpId, xDoc, null);
        }
        
        /// <remarks/>
        public void setCartPropertiesAsync(string username, string password, string compositeCartId, string erpId, System.Xml.XmlNode xDoc, object userState) {
            if ((this.setCartPropertiesOperationCompleted == null)) {
                this.setCartPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetCartPropertiesOperationCompleted);
            }
            this.InvokeAsync("setCartProperties", new object[] {
                        username,
                        password,
                        compositeCartId,
                        erpId,
                        xDoc}, this.setCartPropertiesOperationCompleted, userState);
        }
        
        private void OnsetCartPropertiesOperationCompleted(object arg) {
            if ((this.setCartPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setCartPropertiesCompleted(this, new setCartPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webcominc.com/setCartItemProperties", RequestNamespace="http://webcominc.com/", ResponseNamespace="http://webcominc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string setCartItemProperties(string username, string password, string compositeCartId, string erpId, string xmlDocument, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> revNum) {
            object[] results = this.Invoke("setCartItemProperties", new object[] {
                        username,
                        password,
                        compositeCartId,
                        erpId,
                        xmlDocument,
                        revNum});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void setCartItemPropertiesAsync(string username, string password, string compositeCartId, string erpId, string xmlDocument, System.Nullable<int> revNum) {
            this.setCartItemPropertiesAsync(username, password, compositeCartId, erpId, xmlDocument, revNum, null);
        }
        
        /// <remarks/>
        public void setCartItemPropertiesAsync(string username, string password, string compositeCartId, string erpId, string xmlDocument, System.Nullable<int> revNum, object userState) {
            if ((this.setCartItemPropertiesOperationCompleted == null)) {
                this.setCartItemPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetCartItemPropertiesOperationCompleted);
            }
            this.InvokeAsync("setCartItemProperties", new object[] {
                        username,
                        password,
                        compositeCartId,
                        erpId,
                        xmlDocument,
                        revNum}, this.setCartItemPropertiesOperationCompleted, userState);
        }
        
        private void OnsetCartItemPropertiesOperationCompleted(object arg) {
            if ((this.setCartItemPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setCartItemPropertiesCompleted(this, new setCartItemPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webcominc.com/setCartPropertiesForEveryQuoteInOpportunity", RequestNamespace="http://webcominc.com/", ResponseNamespace="http://webcominc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string setCartPropertiesForEveryQuoteInOpportunity(string domainName, string userName, string sessionId, string url, string opportunityId, string strDoc) {
            object[] results = this.Invoke("setCartPropertiesForEveryQuoteInOpportunity", new object[] {
                        domainName,
                        userName,
                        sessionId,
                        url,
                        opportunityId,
                        strDoc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void setCartPropertiesForEveryQuoteInOpportunityAsync(string domainName, string userName, string sessionId, string url, string opportunityId, string strDoc) {
            this.setCartPropertiesForEveryQuoteInOpportunityAsync(domainName, userName, sessionId, url, opportunityId, strDoc, null);
        }
        
        /// <remarks/>
        public void setCartPropertiesForEveryQuoteInOpportunityAsync(string domainName, string userName, string sessionId, string url, string opportunityId, string strDoc, object userState) {
            if ((this.setCartPropertiesForEveryQuoteInOpportunityOperationCompleted == null)) {
                this.setCartPropertiesForEveryQuoteInOpportunityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetCartPropertiesForEveryQuoteInOpportunityOperationCompleted);
            }
            this.InvokeAsync("setCartPropertiesForEveryQuoteInOpportunity", new object[] {
                        domainName,
                        userName,
                        sessionId,
                        url,
                        opportunityId,
                        strDoc}, this.setCartPropertiesForEveryQuoteInOpportunityOperationCompleted, userState);
        }
        
        private void OnsetCartPropertiesForEveryQuoteInOpportunityOperationCompleted(object arg) {
            if ((this.setCartPropertiesForEveryQuoteInOpportunityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setCartPropertiesForEveryQuoteInOpportunityCompleted(this, new setCartPropertiesForEveryQuoteInOpportunityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webcominc.com/AddItemsData", RequestNamespace="http://webcominc.com/", ResponseNamespace="http://webcominc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddItemsData(string username, string password, string compositeCartId, string erpId, System.Xml.XmlNode xDoc) {
            object[] results = this.Invoke("AddItemsData", new object[] {
                        username,
                        password,
                        compositeCartId,
                        erpId,
                        xDoc});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddItemsDataAsync(string username, string password, string compositeCartId, string erpId, System.Xml.XmlNode xDoc) {
            this.AddItemsDataAsync(username, password, compositeCartId, erpId, xDoc, null);
        }
        
        /// <remarks/>
        public void AddItemsDataAsync(string username, string password, string compositeCartId, string erpId, System.Xml.XmlNode xDoc, object userState) {
            if ((this.AddItemsDataOperationCompleted == null)) {
                this.AddItemsDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddItemsDataOperationCompleted);
            }
            this.InvokeAsync("AddItemsData", new object[] {
                        username,
                        password,
                        compositeCartId,
                        erpId,
                        xDoc}, this.AddItemsDataOperationCompleted, userState);
        }
        
        private void OnAddItemsDataOperationCompleted(object arg) {
            if ((this.AddItemsDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddItemsDataCompleted(this, new AddItemsDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webcominc.com/performCartAction", RequestNamespace="http://webcominc.com/", ResponseNamespace="http://webcominc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode performCartAction(string username, string password, string compositeCartId, string erpId, System.Xml.XmlNode xDoc) {
            object[] results = this.Invoke("performCartAction", new object[] {
                        username,
                        password,
                        compositeCartId,
                        erpId,
                        xDoc});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void performCartActionAsync(string username, string password, string compositeCartId, string erpId, System.Xml.XmlNode xDoc) {
            this.performCartActionAsync(username, password, compositeCartId, erpId, xDoc, null);
        }
        
        /// <remarks/>
        public void performCartActionAsync(string username, string password, string compositeCartId, string erpId, System.Xml.XmlNode xDoc, object userState) {
            if ((this.performCartActionOperationCompleted == null)) {
                this.performCartActionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnperformCartActionOperationCompleted);
            }
            this.InvokeAsync("performCartAction", new object[] {
                        username,
                        password,
                        compositeCartId,
                        erpId,
                        xDoc}, this.performCartActionOperationCompleted, userState);
        }
        
        private void OnperformCartActionOperationCompleted(object arg) {
            if ((this.performCartActionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.performCartActionCompleted(this, new performCartActionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webcominc.com/getActionList", RequestNamespace="http://webcominc.com/", ResponseNamespace="http://webcominc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode getActionList(string username, string password, string compositeCartId) {
            object[] results = this.Invoke("getActionList", new object[] {
                        username,
                        password,
                        compositeCartId});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void getActionListAsync(string username, string password, string compositeCartId) {
            this.getActionListAsync(username, password, compositeCartId, null);
        }
        
        /// <remarks/>
        public void getActionListAsync(string username, string password, string compositeCartId, object userState) {
            if ((this.getActionListOperationCompleted == null)) {
                this.getActionListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetActionListOperationCompleted);
            }
            this.InvokeAsync("getActionList", new object[] {
                        username,
                        password,
                        compositeCartId}, this.getActionListOperationCompleted, userState);
        }
        
        private void OngetActionListOperationCompleted(object arg) {
            if ((this.getActionListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getActionListCompleted(this, new getActionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webcominc.com/PlaceOrder", RequestNamespace="http://webcominc.com/", ResponseNamespace="http://webcominc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode PlaceOrder(string username, string password, string owner, System.Xml.XmlNode placeOrderXml) {
            object[] results = this.Invoke("PlaceOrder", new object[] {
                        username,
                        password,
                        owner,
                        placeOrderXml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void PlaceOrderAsync(string username, string password, string owner, System.Xml.XmlNode placeOrderXml) {
            this.PlaceOrderAsync(username, password, owner, placeOrderXml, null);
        }
        
        /// <remarks/>
        public void PlaceOrderAsync(string username, string password, string owner, System.Xml.XmlNode placeOrderXml, object userState) {
            if ((this.PlaceOrderOperationCompleted == null)) {
                this.PlaceOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPlaceOrderOperationCompleted);
            }
            this.InvokeAsync("PlaceOrder", new object[] {
                        username,
                        password,
                        owner,
                        placeOrderXml}, this.PlaceOrderOperationCompleted, userState);
        }
        
        private void OnPlaceOrderOperationCompleted(object arg) {
            if ((this.PlaceOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PlaceOrderCompleted(this, new PlaceOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webcominc.com/ValidateCatalogueCodes", RequestNamespace="http://webcominc.com/", ResponseNamespace="http://webcominc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ValidateCatalogueCodes(string username, string password, System.Xml.XmlNode codes) {
            object[] results = this.Invoke("ValidateCatalogueCodes", new object[] {
                        username,
                        password,
                        codes});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateCatalogueCodesAsync(string username, string password, System.Xml.XmlNode codes) {
            this.ValidateCatalogueCodesAsync(username, password, codes, null);
        }
        
        /// <remarks/>
        public void ValidateCatalogueCodesAsync(string username, string password, System.Xml.XmlNode codes, object userState) {
            if ((this.ValidateCatalogueCodesOperationCompleted == null)) {
                this.ValidateCatalogueCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateCatalogueCodesOperationCompleted);
            }
            this.InvokeAsync("ValidateCatalogueCodes", new object[] {
                        username,
                        password,
                        codes}, this.ValidateCatalogueCodesOperationCompleted, userState);
        }
        
        private void OnValidateCatalogueCodesOperationCompleted(object arg) {
            if ((this.ValidateCatalogueCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateCatalogueCodesCompleted(this, new ValidateCatalogueCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webcominc.com/RequestForQuotation", RequestNamespace="http://webcominc.com/", ResponseNamespace="http://webcominc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RequestForQuotation(string username, string password, string owner, System.Xml.XmlNode xml) {
            object[] results = this.Invoke("RequestForQuotation", new object[] {
                        username,
                        password,
                        owner,
                        xml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RequestForQuotationAsync(string username, string password, string owner, System.Xml.XmlNode xml) {
            this.RequestForQuotationAsync(username, password, owner, xml, null);
        }
        
        /// <remarks/>
        public void RequestForQuotationAsync(string username, string password, string owner, System.Xml.XmlNode xml, object userState) {
            if ((this.RequestForQuotationOperationCompleted == null)) {
                this.RequestForQuotationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequestForQuotationOperationCompleted);
            }
            this.InvokeAsync("RequestForQuotation", new object[] {
                        username,
                        password,
                        owner,
                        xml}, this.RequestForQuotationOperationCompleted, userState);
        }
        
        private void OnRequestForQuotationOperationCompleted(object arg) {
            if ((this.RequestForQuotationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RequestForQuotationCompleted(this, new RequestForQuotationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webcominc.com/NewQuote", RequestNamespace="http://webcominc.com/", ResponseNamespace="http://webcominc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode NewQuote(string username, string password, string owner, System.Xml.XmlNode xml) {
            object[] results = this.Invoke("NewQuote", new object[] {
                        username,
                        password,
                        owner,
                        xml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void NewQuoteAsync(string username, string password, string owner, System.Xml.XmlNode xml) {
            this.NewQuoteAsync(username, password, owner, xml, null);
        }
        
        /// <remarks/>
        public void NewQuoteAsync(string username, string password, string owner, System.Xml.XmlNode xml, object userState) {
            if ((this.NewQuoteOperationCompleted == null)) {
                this.NewQuoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewQuoteOperationCompleted);
            }
            this.InvokeAsync("NewQuote", new object[] {
                        username,
                        password,
                        owner,
                        xml}, this.NewQuoteOperationCompleted, userState);
        }
        
        private void OnNewQuoteOperationCompleted(object arg) {
            if ((this.NewQuoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewQuoteCompleted(this, new NewQuoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webcominc.com/NewQuoteForFederation", RequestNamespace="http://webcominc.com/", ResponseNamespace="http://webcominc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode NewQuoteForFederation(string username, string password, string owner, System.Xml.XmlNode xml, string idpName) {
            object[] results = this.Invoke("NewQuoteForFederation", new object[] {
                        username,
                        password,
                        owner,
                        xml,
                        idpName});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void NewQuoteForFederationAsync(string username, string password, string owner, System.Xml.XmlNode xml, string idpName) {
            this.NewQuoteForFederationAsync(username, password, owner, xml, idpName, null);
        }
        
        /// <remarks/>
        public void NewQuoteForFederationAsync(string username, string password, string owner, System.Xml.XmlNode xml, string idpName, object userState) {
            if ((this.NewQuoteForFederationOperationCompleted == null)) {
                this.NewQuoteForFederationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewQuoteForFederationOperationCompleted);
            }
            this.InvokeAsync("NewQuoteForFederation", new object[] {
                        username,
                        password,
                        owner,
                        xml,
                        idpName}, this.NewQuoteForFederationOperationCompleted, userState);
        }
        
        private void OnNewQuoteForFederationOperationCompleted(object arg) {
            if ((this.NewQuoteForFederationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewQuoteForFederationCompleted(this, new NewQuoteForFederationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webcominc.com/NewQuoteForFederationRouting", RequestNamespace="http://webcominc.com/", ResponseNamespace="http://webcominc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode NewQuoteForFederationRouting(string username, string password, string owner, System.Xml.XmlNode xml, string idpRoutingName) {
            object[] results = this.Invoke("NewQuoteForFederationRouting", new object[] {
                        username,
                        password,
                        owner,
                        xml,
                        idpRoutingName});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void NewQuoteForFederationRoutingAsync(string username, string password, string owner, System.Xml.XmlNode xml, string idpRoutingName) {
            this.NewQuoteForFederationRoutingAsync(username, password, owner, xml, idpRoutingName, null);
        }
        
        /// <remarks/>
        public void NewQuoteForFederationRoutingAsync(string username, string password, string owner, System.Xml.XmlNode xml, string idpRoutingName, object userState) {
            if ((this.NewQuoteForFederationRoutingOperationCompleted == null)) {
                this.NewQuoteForFederationRoutingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewQuoteForFederationRoutingOperationCompleted);
            }
            this.InvokeAsync("NewQuoteForFederationRouting", new object[] {
                        username,
                        password,
                        owner,
                        xml,
                        idpRoutingName}, this.NewQuoteForFederationRoutingOperationCompleted, userState);
        }
        
        private void OnNewQuoteForFederationRoutingOperationCompleted(object arg) {
            if ((this.NewQuoteForFederationRoutingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewQuoteForFederationRoutingCompleted(this, new NewQuoteForFederationRoutingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webcominc.com/NewQuoteFromSF", RequestNamespace="http://webcominc.com/", ResponseNamespace="http://webcominc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NewQuoteFromSF(string domainName, string sessionId, string sfAPIUrl, string newQuoteXML) {
            object[] results = this.Invoke("NewQuoteFromSF", new object[] {
                        domainName,
                        sessionId,
                        sfAPIUrl,
                        newQuoteXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NewQuoteFromSFAsync(string domainName, string sessionId, string sfAPIUrl, string newQuoteXML) {
            this.NewQuoteFromSFAsync(domainName, sessionId, sfAPIUrl, newQuoteXML, null);
        }
        
        /// <remarks/>
        public void NewQuoteFromSFAsync(string domainName, string sessionId, string sfAPIUrl, string newQuoteXML, object userState) {
            if ((this.NewQuoteFromSFOperationCompleted == null)) {
                this.NewQuoteFromSFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewQuoteFromSFOperationCompleted);
            }
            this.InvokeAsync("NewQuoteFromSF", new object[] {
                        domainName,
                        sessionId,
                        sfAPIUrl,
                        newQuoteXML}, this.NewQuoteFromSFOperationCompleted, userState);
        }
        
        private void OnNewQuoteFromSFOperationCompleted(object arg) {
            if ((this.NewQuoteFromSFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewQuoteFromSFCompleted(this, new NewQuoteFromSFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webcominc.com/LinkOpportunity", RequestNamespace="http://webcominc.com/", ResponseNamespace="http://webcominc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode LinkOpportunity(string username, string password, string orderId, System.Xml.XmlNode xml) {
            object[] results = this.Invoke("LinkOpportunity", new object[] {
                        username,
                        password,
                        orderId,
                        xml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void LinkOpportunityAsync(string username, string password, string orderId, System.Xml.XmlNode xml) {
            this.LinkOpportunityAsync(username, password, orderId, xml, null);
        }
        
        /// <remarks/>
        public void LinkOpportunityAsync(string username, string password, string orderId, System.Xml.XmlNode xml, object userState) {
            if ((this.LinkOpportunityOperationCompleted == null)) {
                this.LinkOpportunityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLinkOpportunityOperationCompleted);
            }
            this.InvokeAsync("LinkOpportunity", new object[] {
                        username,
                        password,
                        orderId,
                        xml}, this.LinkOpportunityOperationCompleted, userState);
        }
        
        private void OnLinkOpportunityOperationCompleted(object arg) {
            if ((this.LinkOpportunityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LinkOpportunityCompleted(this, new LinkOpportunityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webcominc.com/CustomerAdministration", RequestNamespace="http://webcominc.com/", ResponseNamespace="http://webcominc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CustomerAdministration(string username, string password, string action, System.Xml.XmlNode xml) {
            object[] results = this.Invoke("CustomerAdministration", new object[] {
                        username,
                        password,
                        action,
                        xml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CustomerAdministrationAsync(string username, string password, string action, System.Xml.XmlNode xml) {
            this.CustomerAdministrationAsync(username, password, action, xml, null);
        }
        
        /// <remarks/>
        public void CustomerAdministrationAsync(string username, string password, string action, System.Xml.XmlNode xml, object userState) {
            if ((this.CustomerAdministrationOperationCompleted == null)) {
                this.CustomerAdministrationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerAdministrationOperationCompleted);
            }
            this.InvokeAsync("CustomerAdministration", new object[] {
                        username,
                        password,
                        action,
                        xml}, this.CustomerAdministrationOperationCompleted, userState);
        }
        
        private void OnCustomerAdministrationOperationCompleted(object arg) {
            if ((this.CustomerAdministrationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerAdministrationCompleted(this, new CustomerAdministrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webcominc.com/GetQuoteField", RequestNamespace="http://webcominc.com/", ResponseNamespace="http://webcominc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetQuoteField(string username, string password, string quoteNumber, string quoteField) {
            object[] results = this.Invoke("GetQuoteField", new object[] {
                        username,
                        password,
                        quoteNumber,
                        quoteField});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetQuoteFieldAsync(string username, string password, string quoteNumber, string quoteField) {
            this.GetQuoteFieldAsync(username, password, quoteNumber, quoteField, null);
        }
        
        /// <remarks/>
        public void GetQuoteFieldAsync(string username, string password, string quoteNumber, string quoteField, object userState) {
            if ((this.GetQuoteFieldOperationCompleted == null)) {
                this.GetQuoteFieldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQuoteFieldOperationCompleted);
            }
            this.InvokeAsync("GetQuoteField", new object[] {
                        username,
                        password,
                        quoteNumber,
                        quoteField}, this.GetQuoteFieldOperationCompleted, userState);
        }
        
        private void OnGetQuoteFieldOperationCompleted(object arg) {
            if ((this.GetQuoteFieldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQuoteFieldCompleted(this, new GetQuoteFieldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webcominc.com/performQuoteAction", RequestNamespace="http://webcominc.com/", ResponseNamespace="http://webcominc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string performQuoteAction(string username, string password, string compositeCartId, string erpId, string strDoc) {
            object[] results = this.Invoke("performQuoteAction", new object[] {
                        username,
                        password,
                        compositeCartId,
                        erpId,
                        strDoc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void performQuoteActionAsync(string username, string password, string compositeCartId, string erpId, string strDoc) {
            this.performQuoteActionAsync(username, password, compositeCartId, erpId, strDoc, null);
        }
        
        /// <remarks/>
        public void performQuoteActionAsync(string username, string password, string compositeCartId, string erpId, string strDoc, object userState) {
            if ((this.performQuoteActionOperationCompleted == null)) {
                this.performQuoteActionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnperformQuoteActionOperationCompleted);
            }
            this.InvokeAsync("performQuoteAction", new object[] {
                        username,
                        password,
                        compositeCartId,
                        erpId,
                        strDoc}, this.performQuoteActionOperationCompleted, userState);
        }
        
        private void OnperformQuoteActionOperationCompleted(object arg) {
            if ((this.performQuoteActionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.performQuoteActionCompleted(this, new performQuoteActionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webcominc.com/performQuoteActionFromSF", RequestNamespace="http://webcominc.com/", ResponseNamespace="http://webcominc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string performQuoteActionFromSF(string domainName, string userName, string sessionId, string url, string compositeCartId, string opportunityId, string strDoc) {
            object[] results = this.Invoke("performQuoteActionFromSF", new object[] {
                        domainName,
                        userName,
                        sessionId,
                        url,
                        compositeCartId,
                        opportunityId,
                        strDoc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void performQuoteActionFromSFAsync(string domainName, string userName, string sessionId, string url, string compositeCartId, string opportunityId, string strDoc) {
            this.performQuoteActionFromSFAsync(domainName, userName, sessionId, url, compositeCartId, opportunityId, strDoc, null);
        }
        
        /// <remarks/>
        public void performQuoteActionFromSFAsync(string domainName, string userName, string sessionId, string url, string compositeCartId, string opportunityId, string strDoc, object userState) {
            if ((this.performQuoteActionFromSFOperationCompleted == null)) {
                this.performQuoteActionFromSFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnperformQuoteActionFromSFOperationCompleted);
            }
            this.InvokeAsync("performQuoteActionFromSF", new object[] {
                        domainName,
                        userName,
                        sessionId,
                        url,
                        compositeCartId,
                        opportunityId,
                        strDoc}, this.performQuoteActionFromSFOperationCompleted, userState);
        }
        
        private void OnperformQuoteActionFromSFOperationCompleted(object arg) {
            if ((this.performQuoteActionFromSFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.performQuoteActionFromSFCompleted(this, new performQuoteActionFromSFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webcominc.com/GetQuoteData", RequestNamespace="http://webcominc.com/", ResponseNamespace="http://webcominc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetQuoteData(string username, string password, string cartCompositeNumber, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> revNum) {
            object[] results = this.Invoke("GetQuoteData", new object[] {
                        username,
                        password,
                        cartCompositeNumber,
                        revNum});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetQuoteDataAsync(string username, string password, string cartCompositeNumber, System.Nullable<int> revNum) {
            this.GetQuoteDataAsync(username, password, cartCompositeNumber, revNum, null);
        }
        
        /// <remarks/>
        public void GetQuoteDataAsync(string username, string password, string cartCompositeNumber, System.Nullable<int> revNum, object userState) {
            if ((this.GetQuoteDataOperationCompleted == null)) {
                this.GetQuoteDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQuoteDataOperationCompleted);
            }
            this.InvokeAsync("GetQuoteData", new object[] {
                        username,
                        password,
                        cartCompositeNumber,
                        revNum}, this.GetQuoteDataOperationCompleted, userState);
        }
        
        private void OnGetQuoteDataOperationCompleted(object arg) {
            if ((this.GetQuoteDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQuoteDataCompleted(this, new GetQuoteDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webcominc.com/GetQuoteItemsAttributes", RequestNamespace="http://webcominc.com/", ResponseNamespace="http://webcominc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetQuoteItemsAttributes(string username, string password, string cartCompositeNumber, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> revNum, string[] attributeNames, bool getAllAttributes) {
            object[] results = this.Invoke("GetQuoteItemsAttributes", new object[] {
                        username,
                        password,
                        cartCompositeNumber,
                        revNum,
                        attributeNames,
                        getAllAttributes});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetQuoteItemsAttributesAsync(string username, string password, string cartCompositeNumber, System.Nullable<int> revNum, string[] attributeNames, bool getAllAttributes) {
            this.GetQuoteItemsAttributesAsync(username, password, cartCompositeNumber, revNum, attributeNames, getAllAttributes, null);
        }
        
        /// <remarks/>
        public void GetQuoteItemsAttributesAsync(string username, string password, string cartCompositeNumber, System.Nullable<int> revNum, string[] attributeNames, bool getAllAttributes, object userState) {
            if ((this.GetQuoteItemsAttributesOperationCompleted == null)) {
                this.GetQuoteItemsAttributesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQuoteItemsAttributesOperationCompleted);
            }
            this.InvokeAsync("GetQuoteItemsAttributes", new object[] {
                        username,
                        password,
                        cartCompositeNumber,
                        revNum,
                        attributeNames,
                        getAllAttributes}, this.GetQuoteItemsAttributesOperationCompleted, userState);
        }
        
        private void OnGetQuoteItemsAttributesOperationCompleted(object arg) {
            if ((this.GetQuoteItemsAttributesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQuoteItemsAttributesCompleted(this, new GetQuoteItemsAttributesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webcominc.com/GetCatalogue", RequestNamespace="http://webcominc.com/", ResponseNamespace="http://webcominc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCatalogue(string username, string password) {
            object[] results = this.Invoke("GetCatalogue", new object[] {
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCatalogueAsync(string username, string password) {
            this.GetCatalogueAsync(username, password, null);
        }
        
        /// <remarks/>
        public void GetCatalogueAsync(string username, string password, object userState) {
            if ((this.GetCatalogueOperationCompleted == null)) {
                this.GetCatalogueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCatalogueOperationCompleted);
            }
            this.InvokeAsync("GetCatalogue", new object[] {
                        username,
                        password}, this.GetCatalogueOperationCompleted, userState);
        }
        
        private void OnGetCatalogueOperationCompleted(object arg) {
            if ((this.GetCatalogueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCatalogueCompleted(this, new GetCatalogueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webcominc.com/UpsertProject", RequestNamespace="http://webcominc.com/", ResponseNamespace="http://webcominc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpsertProject(string username, string password, string projectXML) {
            object[] results = this.Invoke("UpsertProject", new object[] {
                        username,
                        password,
                        projectXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpsertProjectAsync(string username, string password, string projectXML) {
            this.UpsertProjectAsync(username, password, projectXML, null);
        }
        
        /// <remarks/>
        public void UpsertProjectAsync(string username, string password, string projectXML, object userState) {
            if ((this.UpsertProjectOperationCompleted == null)) {
                this.UpsertProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpsertProjectOperationCompleted);
            }
            this.InvokeAsync("UpsertProject", new object[] {
                        username,
                        password,
                        projectXML}, this.UpsertProjectOperationCompleted, userState);
        }
        
        private void OnUpsertProjectOperationCompleted(object arg) {
            if ((this.UpsertProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpsertProjectCompleted(this, new UpsertProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webcominc.com/UpsertProjectFromSF", RequestNamespace="http://webcominc.com/", ResponseNamespace="http://webcominc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpsertProjectFromSF(string domainName, string userName, string sessionId, string url, string projectXML) {
            object[] results = this.Invoke("UpsertProjectFromSF", new object[] {
                        domainName,
                        userName,
                        sessionId,
                        url,
                        projectXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpsertProjectFromSFAsync(string domainName, string userName, string sessionId, string url, string projectXML) {
            this.UpsertProjectFromSFAsync(domainName, userName, sessionId, url, projectXML, null);
        }
        
        /// <remarks/>
        public void UpsertProjectFromSFAsync(string domainName, string userName, string sessionId, string url, string projectXML, object userState) {
            if ((this.UpsertProjectFromSFOperationCompleted == null)) {
                this.UpsertProjectFromSFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpsertProjectFromSFOperationCompleted);
            }
            this.InvokeAsync("UpsertProjectFromSF", new object[] {
                        domainName,
                        userName,
                        sessionId,
                        url,
                        projectXML}, this.UpsertProjectFromSFOperationCompleted, userState);
        }
        
        private void OnUpsertProjectFromSFOperationCompleted(object arg) {
            if ((this.UpsertProjectFromSFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpsertProjectFromSFCompleted(this, new UpsertProjectFromSFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webcominc.com/CreateNewQuoteAndGetQuoteData", RequestNamespace="http://webcominc.com/", ResponseNamespace="http://webcominc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateNewQuoteAndGetQuoteData(string username, string password, string owner, string inputXml, string[] attributeNames) {
            object[] results = this.Invoke("CreateNewQuoteAndGetQuoteData", new object[] {
                        username,
                        password,
                        owner,
                        inputXml,
                        attributeNames});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateNewQuoteAndGetQuoteDataAsync(string username, string password, string owner, string inputXml, string[] attributeNames) {
            this.CreateNewQuoteAndGetQuoteDataAsync(username, password, owner, inputXml, attributeNames, null);
        }
        
        /// <remarks/>
        public void CreateNewQuoteAndGetQuoteDataAsync(string username, string password, string owner, string inputXml, string[] attributeNames, object userState) {
            if ((this.CreateNewQuoteAndGetQuoteDataOperationCompleted == null)) {
                this.CreateNewQuoteAndGetQuoteDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateNewQuoteAndGetQuoteDataOperationCompleted);
            }
            this.InvokeAsync("CreateNewQuoteAndGetQuoteData", new object[] {
                        username,
                        password,
                        owner,
                        inputXml,
                        attributeNames}, this.CreateNewQuoteAndGetQuoteDataOperationCompleted, userState);
        }
        
        private void OnCreateNewQuoteAndGetQuoteDataOperationCompleted(object arg) {
            if ((this.CreateNewQuoteAndGetQuoteDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateNewQuoteAndGetQuoteDataCompleted(this, new CreateNewQuoteAndGetQuoteDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webcominc.com/SearchQuotes", RequestNamespace="http://webcominc.com/", ResponseNamespace="http://webcominc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SearchQuotes(string Username, string Password, string SearchCriteriaXML) {
            object[] results = this.Invoke("SearchQuotes", new object[] {
                        Username,
                        Password,
                        SearchCriteriaXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SearchQuotesAsync(string Username, string Password, string SearchCriteriaXML) {
            this.SearchQuotesAsync(Username, Password, SearchCriteriaXML, null);
        }
        
        /// <remarks/>
        public void SearchQuotesAsync(string Username, string Password, string SearchCriteriaXML, object userState) {
            if ((this.SearchQuotesOperationCompleted == null)) {
                this.SearchQuotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchQuotesOperationCompleted);
            }
            this.InvokeAsync("SearchQuotes", new object[] {
                        Username,
                        Password,
                        SearchCriteriaXML}, this.SearchQuotesOperationCompleted, userState);
        }
        
        private void OnSearchQuotesOperationCompleted(object arg) {
            if ((this.SearchQuotesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchQuotesCompleted(this, new SearchQuotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webcominc.com/SearchQuotesFromSF", RequestNamespace="http://webcominc.com/", ResponseNamespace="http://webcominc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SearchQuotesFromSF(string DomainName, string SFSessionId, string SFApiUrl, string SearchCriteriaXML) {
            object[] results = this.Invoke("SearchQuotesFromSF", new object[] {
                        DomainName,
                        SFSessionId,
                        SFApiUrl,
                        SearchCriteriaXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SearchQuotesFromSFAsync(string DomainName, string SFSessionId, string SFApiUrl, string SearchCriteriaXML) {
            this.SearchQuotesFromSFAsync(DomainName, SFSessionId, SFApiUrl, SearchCriteriaXML, null);
        }
        
        /// <remarks/>
        public void SearchQuotesFromSFAsync(string DomainName, string SFSessionId, string SFApiUrl, string SearchCriteriaXML, object userState) {
            if ((this.SearchQuotesFromSFOperationCompleted == null)) {
                this.SearchQuotesFromSFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchQuotesFromSFOperationCompleted);
            }
            this.InvokeAsync("SearchQuotesFromSF", new object[] {
                        DomainName,
                        SFSessionId,
                        SFApiUrl,
                        SearchCriteriaXML}, this.SearchQuotesFromSFOperationCompleted, userState);
        }
        
        private void OnSearchQuotesFromSFOperationCompleted(object arg) {
            if ((this.SearchQuotesFromSFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchQuotesFromSFCompleted(this, new SearchQuotesFromSFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webcominc.com/GetRevisions", RequestNamespace="http://webcominc.com/", ResponseNamespace="http://webcominc.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRevisions(string username, string password, string quoteCompositeNumber) {
            object[] results = this.Invoke("GetRevisions", new object[] {
                        username,
                        password,
                        quoteCompositeNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRevisionsAsync(string username, string password, string quoteCompositeNumber) {
            this.GetRevisionsAsync(username, password, quoteCompositeNumber, null);
        }
        
        /// <remarks/>
        public void GetRevisionsAsync(string username, string password, string quoteCompositeNumber, object userState) {
            if ((this.GetRevisionsOperationCompleted == null)) {
                this.GetRevisionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRevisionsOperationCompleted);
            }
            this.InvokeAsync("GetRevisions", new object[] {
                        username,
                        password,
                        quoteCompositeNumber}, this.GetRevisionsOperationCompleted, userState);
        }
        
        private void OnGetRevisionsOperationCompleted(object arg) {
            if ((this.GetRevisionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRevisionsCompleted(this, new GetRevisionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void doUSeeMeCompletedEventHandler(object sender, doUSeeMeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doUSeeMeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doUSeeMeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getCartPropertiesCompletedEventHandler(object sender, getCartPropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCartPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCartPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void setCartPropertiesCompletedEventHandler(object sender, setCartPropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setCartPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setCartPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void setCartItemPropertiesCompletedEventHandler(object sender, setCartItemPropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setCartItemPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setCartItemPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void setCartPropertiesForEveryQuoteInOpportunityCompletedEventHandler(object sender, setCartPropertiesForEveryQuoteInOpportunityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setCartPropertiesForEveryQuoteInOpportunityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setCartPropertiesForEveryQuoteInOpportunityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void AddItemsDataCompletedEventHandler(object sender, AddItemsDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddItemsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddItemsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void performCartActionCompletedEventHandler(object sender, performCartActionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class performCartActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal performCartActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getActionListCompletedEventHandler(object sender, getActionListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getActionListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getActionListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void PlaceOrderCompletedEventHandler(object sender, PlaceOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PlaceOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PlaceOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void ValidateCatalogueCodesCompletedEventHandler(object sender, ValidateCatalogueCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateCatalogueCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateCatalogueCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void RequestForQuotationCompletedEventHandler(object sender, RequestForQuotationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequestForQuotationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RequestForQuotationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void NewQuoteCompletedEventHandler(object sender, NewQuoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewQuoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewQuoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void NewQuoteForFederationCompletedEventHandler(object sender, NewQuoteForFederationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewQuoteForFederationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewQuoteForFederationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void NewQuoteForFederationRoutingCompletedEventHandler(object sender, NewQuoteForFederationRoutingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewQuoteForFederationRoutingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewQuoteForFederationRoutingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void NewQuoteFromSFCompletedEventHandler(object sender, NewQuoteFromSFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewQuoteFromSFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NewQuoteFromSFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void LinkOpportunityCompletedEventHandler(object sender, LinkOpportunityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LinkOpportunityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LinkOpportunityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void CustomerAdministrationCompletedEventHandler(object sender, CustomerAdministrationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomerAdministrationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomerAdministrationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetQuoteFieldCompletedEventHandler(object sender, GetQuoteFieldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQuoteFieldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQuoteFieldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void performQuoteActionCompletedEventHandler(object sender, performQuoteActionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class performQuoteActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal performQuoteActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void performQuoteActionFromSFCompletedEventHandler(object sender, performQuoteActionFromSFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class performQuoteActionFromSFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal performQuoteActionFromSFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetQuoteDataCompletedEventHandler(object sender, GetQuoteDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQuoteDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQuoteDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetQuoteItemsAttributesCompletedEventHandler(object sender, GetQuoteItemsAttributesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQuoteItemsAttributesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQuoteItemsAttributesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetCatalogueCompletedEventHandler(object sender, GetCatalogueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCatalogueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCatalogueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void UpsertProjectCompletedEventHandler(object sender, UpsertProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpsertProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpsertProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void UpsertProjectFromSFCompletedEventHandler(object sender, UpsertProjectFromSFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpsertProjectFromSFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpsertProjectFromSFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void CreateNewQuoteAndGetQuoteDataCompletedEventHandler(object sender, CreateNewQuoteAndGetQuoteDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateNewQuoteAndGetQuoteDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateNewQuoteAndGetQuoteDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void SearchQuotesCompletedEventHandler(object sender, SearchQuotesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchQuotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchQuotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void SearchQuotesFromSFCompletedEventHandler(object sender, SearchQuotesFromSFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchQuotesFromSFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchQuotesFromSFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetRevisionsCompletedEventHandler(object sender, GetRevisionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRevisionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRevisionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591